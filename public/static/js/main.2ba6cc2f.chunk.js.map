{"version":3,"sources":["screens/header/header.js","screens/login/userLogin.js","screens/createAssessments/createAssessment.js","screens/viewAssessments/viewAssessments.js","components/SimpleTable.js","screens/students/student-temp.js","screens/assessment/viewAssessment.js","screens/assessmentUser/assessmentUser.js","screens/students/assessmentList.js","screens/teacherDashboard/teacherDashboard.js","components/TitleBarGridList.js","screens/students/studentDashboard.js","screens/students/assessment.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","header","classes","useContext","UserDetailsContext","userContext","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Typography","variant","name","Button","createStyles","container","display","flexWrap","width","margin","loginBtn","marginTop","textAlign","background","card","Login","history","useHistory","useState","username","setUsername","password","setPassword","isButtonDisabled","setIsButtonDisabled","helperText","setHelperText","error","setError","setUserContext","users","setUsers","a","fetch","st","json","d","useEffect","fetchStudents","then","trim","handleLogin","userIndex","map","x","index","toLowerCase","indexOf","console","log","category","push","handleKeyPress","e","keyCode","which","Fragment","noValidate","autoComplete","Card","CardHeader","CardContent","TextField","fullWidth","id","label","onChange","target","value","onKeyPress","type","placeholder","CardActions","size","onClick","disabled","span","text","option","icon","fontSize","divider","questionDiv","marginLeft","fontWeight","form","height","CreateAssessment","question","options","result","questions","addQuestion","selectedQuestion","changeSelectedQuestion","optionTxt","setName","isAssessmentCreated","setAssessment","onCreateAssessment","autoFocus","key","event","preventDefault","onChangeName","Question","onPreviewAssessment","renderAssessmentForm","renderOptions","prop","Chip","onDelete","newQuestions","splice","onDeleteChip","toString","onSelectCorrectOption","clickable","Number","renderSelectedQuestion","onChangeText","style","length","onDeleteQuestion","renderOptionButtons","onChangeOptionTxt","onAddOption","Divider","ViewAssessments","SimpleTable","props","columns","rows","TableContainer","TableHead","TableRow","column","TableCell","align","TableBody","row","assessments","status","badges","StudentsTemp","students","setStudents","justifyContent","ViewAssessment","location","useLocation","state","isCorrect","userSelections","setUserSelected","isCreated","setCreated","onProceed","assessment","qa","studentAnswers","selection","userId","requestOptions","method","headers","body","JSON","stringify","response","questionIndex","Paper","answerIndex","Radio","checked","newuserSelections","answers","onCheckAnswer","AssessmentUserScreen","holder","pos","marginBottom","AssessmentList","teachers","teacher","Grid","xs","OutlinedCard","takeAssessment","bullet","gutterBottom","component","paper","padding","palette","secondary","flexDirection","minHeight","avatar","alignSelf","button","TeacherDashboard","useRouteMatch","path","url","onBtnClick","action","item","elevation","Avatar","src","exact","overflow","backgroundColor","gridList","StudentDashboard","setTeachers","isolateTeachers","data","filter","user","fetchUsers","Assessment","setResult","computeResults","correctAnswers","answer","createContext","App","setValue","Provider","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.2ba6cc2f.chunk.js","sourcesContent":["/* eslint-disable react-hooks/rules-of-hooks */\nimport React, { useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport GradeIcon from '@material-ui/icons/Grade';\nimport { UserDetailsContext } from '../../App';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function header() {\n  const classes = useStyles();\n\n  const [userContext,setUserContext] = useContext(UserDetailsContext); \n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <GradeIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Student Grader\n          </Typography>\n          <Typography variant=\"h7\" className={classes.title}>\n            Welcome {userContext.name}\n          </Typography>\n          <Button color=\"inherit\">Logout</Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}","import React, { useState, useEffect, useContext} from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport TextField from '@material-ui/core/TextField';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport { UserDetailsContext } from '../../App';\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      width: 400,\n      margin: `${theme.spacing(0)} auto`\n    },\n    loginBtn: {\n      marginTop: theme.spacing(2),\n      flexGrow: 1\n    },\n    header: {\n      textAlign: 'center',\n      background: '#212121',\n      color: '#fff'\n    },\n    card: {\n      marginTop: theme.spacing(10)\n    }\n\n  }),\n);\n\nconst Login = () => {\n  const history = useHistory();\n  const classes = useStyles();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [isButtonDisabled, setIsButtonDisabled] = useState(true);\n  const [helperText, setHelperText] = useState('');\n  const [error, setError] = useState(false);\n  const [userContext,setUserContext] = useContext(UserDetailsContext);\n\n  const [users,setUsers] = useState();\n  async function fetchStudents(){\n      const st = await fetch('http://localhost:3000/users');\n\n      const d = await st.json();\n      debugger;\n      return d;\n  } \n\n  useEffect(() => {\n\n  \n   \n      \n        \n        fetchStudents()\n            .then(setUsers);\n        \n \n\n    if (username.trim() && password.trim()) {\n      setIsButtonDisabled(false);\n    } else {\n      setIsButtonDisabled(true);\n    }\n  }, [username, password]);\n\n  const handleLogin = () => {\n    debugger;\n    const userIndex = users.map((x,index)=>{return x.name.toLowerCase()}).indexOf(username.toLowerCase());\n    if (userIndex != -1 \n        && password === 'password') {\n \n      console.log('Jus log');\n      setUserContext(users[userIndex]);\n          \n      if(users[userIndex].category == \"Teacher\"){\n        history.push(\"/home\");\n      }else if(users[userIndex].category == \"Student\"){\n        history.push(\"/student\");\n      }\n\n\n      \n    } else {\n      setError(true);\n      setHelperText('Incorrect username or password')\n    }\n  };\n\n  const handleKeyPress = (e:any) => {\n    if (e.keyCode === 13 || e.which === 13) {\n      isButtonDisabled || handleLogin();\n    }\n  };\n\n  return (   \n    <React.Fragment>\n      <form className={classes.container} noValidate autoComplete=\"off\">\n        <Card className={classes.card}>\n          <CardHeader className={classes.header} title=\"Happy Learning\" />\n          <CardContent>\n            <div>\n              <TextField\n                error={error}\n                fullWidth\n                id=\"username\"\n\n                label=\"Username\"  \n                color=\"secondary\" \n                onChange={(e)=>setUsername(e.target.value)}\n                onKeyPress={(e)=>handleKeyPress(e)}\n              />\n              <TextField\n                error={error}\n                fullWidth\n                id=\"password\"\n                type=\"password\"\n                label=\"Password\"\n                placeholder=\"Password\"\n                margin=\"normal\"\n                helperText={helperText}\n                onChange={(e)=>setPassword(e.target.value)}\n                onKeyPress={(e)=>handleKeyPress(e)}\n              />\n            </div>\n          </CardContent>\n          <CardActions>\n            <Button\n              variant=\"contained\"\n              size=\"large\"\n              color=\"secondary\"\n              className={classes.loginBtn}\n              onClick={()=>handleLogin()}\n              disabled={isButtonDisabled}>\n              Login\n            </Button>\n          </CardActions>\n        </Card>\n      </form>\n    </React.Fragment>\n  );\n}\n\nexport default Login;","import React, {useState} from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport {makeStyles} from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport Chip from '@material-ui/core/Chip';\nimport Divider from '@material-ui/core/Divider';\nimport { Button } from '@material-ui/core';\nimport {useHistory } from 'react-router-dom';\n\n\n\nconst useStyles = makeStyles(theme => ({\n    span:{\n        margin : '10px'\n    },\n    text : {\n        width : '80%'\n    },\n    option : {\n        width : '25%'\n    },\n    icon:{\n        fontSize : '30px'\n    },\n    divider : {\n        margin: '10px'\n    },\n    questionDiv : {\n        textAlign : 'left',\n        marginTop: '30px',\n        marginLeft: '10px',\n        fontSize : '22px',\n        fontWeight : 'bold'\n    },\n    form:{\n        height : '100%'\n    }\n}));\n\nexport default function CreateAssessment(){\n\n    const [questions,addQuestion] = useState([{question:\"\",options:[],result:\"0\"}]);\n    const [selectedQuestion,changeSelectedQuestion] = useState(0);\n    const classes = useStyles();\n    const history = useHistory();\n    let optionTxt = '';\n    const [name,setName] = useState('');\n    const [isAssessmentCreated,setAssessment] = useState(false);\n\n    const onAddNewQuestion = (index)=>{\n        debugger;\n        changeSelectedQuestion(index+1);\n        addQuestion([...questions,{question:\"\",options:[]}]);\n    }\n\n    function onChangeName(event){\n        event.preventDefault();\n\n        setName(event.target.value);\n    }\n\n    function onCreateAssessment(){\n        setAssessment(true);\n    }\n\n    function renderAssessmentForm(){\n        if(isAssessmentCreated){\n            return(\n                <div>\n                    <form key=\"assessment\" className={classes.form}>\n                            {\n                                questions.map((question,index) => (\n                                    <Question question={question} \n                                                index={index}/>\n                                    \n                                ))\n                            }\n                            </form>\n                    \n                        <Button variant=\"contained\" \n                                color='primary'\n                                onClick={onPreviewAssessment}>\n                                    Review Assessment\n                        </Button>  \n                    </div> \n            )\n        }else{\n\n        }\n        \n    }\n\n    function renderAssessmentNameInput(){\n        if(!isAssessmentCreated){\n            return (\n                <span>\n                    <TextField className={classes.text} \n                                    label=\"Assessment\" \n                                    color=\"secondary\" \n                                    value = {name}\n                                    autoFocus\n                                    key={name}\n                                    onChange={(event)=>onChangeName(event)}\n                                    />\n                    \n                    <Button onClick={onCreateAssessment}>Create</Button>\n                </span>\n            )\n        }else{\n\n            return(\n            <h2>{name}</h2>\n            )\n        }\n        \n    }\n\n    return (\n        <div>\n             <div>\n                   {\n\n                        renderAssessmentNameInput()\n                   }\n                   \n            </div>\n            {\n                \n                renderAssessmentForm()\n            }\n        </div>\n    );\n\n    function onChangeText(event,prop){\n        \n        event.preventDefault();\n      \n        \n       let newQuestions = [...questions];\n\n       newQuestions[prop.index].question = event.target.value;\n\n       addQuestion(newQuestions);\n\n     \n    }\n\n    function onAddOption(prop,e){\n        debugger;\n        e.preventDefault();\n      \n        \n       let newQuestions = [...questions];\n\n       if(newQuestions[prop.index].options){\n        newQuestions[prop.index].options.push(optionTxt);\n       }else{\n        newQuestions[prop.index].options = [];\n        newQuestions[prop.index].options.push(optionTxt);\n       }\n       \n\n       addQuestion(newQuestions);\n    }\n\n    function onDeleteQuestion(prop,e){\n        e.preventDefault();\n        let newQuestions = [...questions];\n\n        if(newQuestions.length == 1){\n\n            return;\n            \n        }\n\n        newQuestions.splice(prop.index,1);\n\n        addQuestion(newQuestions);\n    }\n\n    function onDeleteChip(prop,index){\n\n       let newQuestions = [...questions];\n       newQuestions[prop.index].options.splice(index,1);\n\n       addQuestion(newQuestions);\n    }\n\n    function renderOptions(prop){\n      \n        return prop.question.options?.map((option,index)=>(\n            <Chip className={classes.span}  \n                    label={option}\n                    onDelete = {()=>onDeleteChip(prop,index)}\n                    onClick = {()=>onSelectCorrectOption(prop,index)}\n                    clickable\n                color={Number(prop.question.result) == index ? \"primary\":\"secondary\"} />\n        ))\n    }\n\n    function onChangeOptionTxt(e){\n\n        e.preventDefault();\n        optionTxt = e.target.value;\n    }\n\n    function onSelectCorrectOption(prop,index){\n        debugger;\n        let newQuestions = [...questions];\n\n        newQuestions[prop.index].result = index.toString();\n\n        addQuestion(newQuestions);\n    }\n\n   function renderSelectedQuestion(prop){\n       debugger;\n        if(selectedQuestion == prop.index){\n            return (\n                <span>\n                    <TextField className={classes.text} \n                                    label=\"Type your Question\" \n                                    color=\"secondary\" \n                                    value = {prop.question.question}\n                                    autoFocus\n                                    key={prop.index}\n                                    onChange={(e)=>onChangeText(e,prop)}\n                                    /> \n\n                    <AddIcon color=\"primary\" \n                                    onClick={()=>onAddNewQuestion(prop.index)}\n                                    style={{ fontSize : 45}}>\n                    </AddIcon>\n                    <DeleteForeverIcon color=\"primary\" \n                                    style={{ fontSize : 45}}\n                                    onClick={(e)=>onDeleteQuestion(prop,e)}>\n                    </DeleteForeverIcon>\n                </span>\n            )\n        }else{\n            return(\n                    <div className = {classes.questionDiv} onClick = {()=>changeSelectedQuestion(prop.index)}>\n                        {prop.question.question}\n                    </div>\n            )\n        }\n        \n   }\n\n   function renderOptionButtons(prop){\n        if(selectedQuestion == prop.index){\n            return (\n                     <span className={classes.span}>\n                        <TextField className={classes.option}\n                        label=\"Type your option here\"\n                        key={`option ${prop.index}`}\n                        onChange={(e)=>onChangeOptionTxt(e)}\n                        />\n                        <AddIcon color=\"primary\" \n                                style={{ fontSize : 45}}\n                                onClick={(e)=>onAddOption(prop,e)}>\n                        </AddIcon>\n                     </span>\n                    ) ;\n        }\n   }\n\n    function Question (prop){\n        debugger;\n        return (\n            <div className={classes.span} >\n                <span >\n                    {\n                        renderSelectedQuestion(prop)\n                    }\n                </span>\n                <div className={classes.span} >\n                    <span className={classes.span}>\n                        {\n                            renderOptions(prop)\n                        }\n                    </span>\n                </div>\n                \n                    {\n                        renderOptionButtons(prop)\n                            \n                    }\n                \n                <Divider className={classes.divider}/>\n            </div>\n        );\n    }\n\n    function onPreviewAssessment(){\n        history.push('/home/viewAssessment',{name:name,questions:[...questions]});\n    }\n}\n\n","import React from 'react';\n\nexport default function ViewAssessments() {\n\n    return (<div>View Assessment</div>)\n};","import React from 'react';\n\nimport {TableContainer,\n        Table,\n        TableHead,\n        TableRow,\n        TableBody,\n        TableCell\n      } from '@material-ui/core';\n\n\nexport default function SimpleTable(props){\n\n    const {columns,rows} = props;\n    \n\n    return (<TableContainer>\n                <TableContainer>\n                    <TableHead>\n                        <TableRow>\n                            {columns.map((column)=> (\n                                <TableCell align=\"right\">{column}</TableCell>\n                            ))}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {\n                            rows.map((row)=>(\n                                row.category == \"Student\" ?  (\n                                    <TableRow key={row.name}>\n                                        <TableCell align=\"right\">{row.name}</TableCell>\n                                        <TableCell align=\"right\">{row.category}</TableCell>\n                                        <TableCell align=\"right\">{row.assessments?.length}</TableCell>\n                                        <TableCell align=\"right\">{row.status}</TableCell>\n                                        <TableCell align=\"right\">{row.badges.length}</TableCell>\n                                    </TableRow>\n                                ) : <div></div>\n                               \n                            \n                            ))\n                        }\n                    </TableBody>\n                </TableContainer>\n            </TableContainer>)\n}","import React, {useEffect,useState} from 'react';\nimport SimpleTable from '../../components/SimpleTable';\n\nexport default function StudentsTemp(){\n\n    const [students,setStudents] = useState();\n    async function fetchStudents(){\n        const st = await fetch('http://localhost:3000/users?filter[include][][relation]=assessments');\n\n        const d = await st.json();\n\n        return d;\n    } \n    useEffect(() => {\n      \n        \n        fetchStudents()\n            .then(setStudents);\n        \n    },[]);\n\n    function setRows(){\n        console.log(students);\n        alert(students);\n        /*rows = students.map((student)=>{\n            return {name:student.name, catg:student.category, badge:student.badge};\n        });*/\n    }\n\n    const columns = [\"Name\",\n                    \"Catgeory\",\n                    \"No. of Assessments\",\n                    \"Status\",\n                    \"Badges\"];\n\n    const rows = [];\n\n   if(students){\n    return (<SimpleTable columns = {columns} rows= {students}/>);\n   }else{\n       return <div>Loading ...</div>\n   }\n    \n}","import React, {useState, useContext} from 'react';\nimport { useLocation,useHistory } from \"react-router-dom\";\nimport {makeStyles} from '@material-ui/core/styles';\nimport {Radio, Paper, Button} from '@material-ui/core';\nimport { UserDetailsContext } from '../../App';\n\n\nconst useStyles = makeStyles((theme)=>({\n\n        question : {\n            textAlign : 'left',\n            fontSize : '20px'\n        },\n        option : {\n            display: 'flex',\n            justifyContent : 'left'\n        }\n}));\n\nexport default function ViewAssessment() {\n    \n    const classes = useStyles();\n\n    const location = useLocation();\n    const history = useHistory();\n\n    const [questions, setQuestions]= useState(location.state.questions);\n    const [name,setName] = useState(location.state.name);\n\n    const [userSelections,setUserSelected] = useState(questions.map((question)=>{\n                                                        return question.options.map((option)=>{\n                                                            return {isCorrect:false, value : option};\n                                                        });\n                                                      }));\n\n    const [isCreated,setCreated] = useState(false);\n\n    const [value,setValue] = useContext(UserDetailsContext);\n\n   \n    debugger;\n\n    function onCheckAnswer(questionIndex,answerIndex,option){\n        debugger;\n\n        var newuserSelections = [...userSelections];\n\n        newuserSelections[questionIndex] = newuserSelections[questionIndex].map(answers=>{\n            return {isCorrect : false, value : option};\n        });\n\n        newuserSelections[questionIndex][answerIndex] = {isCorrect:true, value:option};\n\n        setUserSelected(newuserSelections);\n    }\n\n    async function onProceed(){\n    \n        debugger;\n\n\n        const assessment = {};\n\n        assessment.name = name;\n        assessment.qa = questions;\n        assessment.studentAnswers = [];\n        userSelections.map((questions)=>{\n            return questions.map((selection,index)=>{\n                if(selection.isCorrect){\n                    assessment.studentAnswers.push(selection.value);\n                }\n            })               \n                                    });\n        assessment.status = \"created\";\n        assessment.result = \"\";\n        assessment.userId = value.id;\n        debugger;\n\n        // POST request using fetch with async/await\n        const requestOptions = {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(assessment)\n            };\n\n        const response = await fetch('http://localhost:3000/assessments', requestOptions);\n        const data = await response.json();\n\n        setCreated(true);\n\n    }\n\n    return (\n        <div>\n            {render()}\n        </div>\n    )\n\n    function render(){\n        \n            if(!isCreated){\n            return (\n                <div>\n                    <h2>{name}</h2>\n                    {\n                        questions.map((question,questionIndex) => (\n                            <div className={classes.question}>\n                                <Paper >{question.question}</Paper>\n                                        { question.options.map((option,answerIndex)=>(\n                                            <span className={classes.options}>\n                                                <Radio color='primary' \n                                                        value={option} \n                                                        checked={userSelections[questionIndex][answerIndex]?.isCorrect}\n                                                        onChange={()=>onCheckAnswer(questionIndex,answerIndex,option)}/>\n                                                <label>{option}</label>\n                                            </span>\n                                        ))}\n                              \n                                    \n                        \n                             </div>   \n                            \n                        ))\n                    }\n        \n                    <Button color=\"primary\" \n                            variant=\"contained\"\n                            onClick={onProceed}>Proceed</Button>\n                    \n                </div>\n            )\n        }else{\n            return (\n                <div> Assessment Created </div>\n            )\n        }\n        \n    }\n    \n    \n}\n","import React from 'react';\n\nexport default function AssessmentUserScreen(){\n\n    return (\n        <div>User Assessment</div>\n    )\n}","import React from 'react';\nimport {useHistory} from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\n\n\nconst useStyles = makeStyles({\n    holder: {\n      flexGrow : 1\n    \n    },\n   \n    title: {\n      fontSize: 14,\n    },\n    pos: {\n      marginBottom: 12,\n    },\n  });\n\nexport default function AssessmentList(props){\n\n    const {teachers} = props;\n    const classes = useStyles();\n    const history = useHistory();\n\n    function takeAssessment(assessment){\n      history.push('/assessment',assessment);\n    }\n \n    function renderAssessment(){\n        if(teachers && teachers.length >0 ){\n            return teachers.map((teacher)=>{\n              debugger;\n              if( teacher.assessments && \n                  teacher.assessments.length > 0){\n                  return (\n                      <Grid container >\n                          {\n                              teacher.assessments.map(assessment=>{\n                                  return (\n                                    <Grid xs={3}>\n                                      <OutlinedCard teacher = {teacher}\n                                                  assessment = {assessment}\n                                                  takeAssessment = {()=>takeAssessment(assessment)} />\n                                    </Grid>\n                                      \n                                  \n                                    \n                                  )\n                              })\n                          }\n                      </Grid>\n                      \n                  )\n              }\n              \n          })\n        }else{\n          return (\n            <div>Loading ...</div>\n          )\n\n        }\n        \n    }\n    return (\n        <div className={classes.holder}>\n            {\n               renderAssessment()\n            }\n        </div>\n    )\n}\n\nfunction OutlinedCard(prop) {\n    const classes = useStyles();\n    const bull = <span className={classes.bullet}>•</span>;\n  \n    return (\n      <Card className={classes.root} variant=\"outlined\">\n        <CardContent>\n          <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n            {(prop.assessment.status && prop.assessment.status == 'created') ? 'Yet To Start': prop.assessment.status}\n          </Typography>\n          <Typography variant=\"h5\" component=\"h2\">\n            Mr.{prop.teacher.name}\n          </Typography>\n          <Typography className={classes.pos} color=\"textSecondary\">\n            {prop.assessment.name}\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\">\n            Complete it faster and Earn a badge\n            <br />\n            Look up Timer will be running\n          </Typography>\n        </CardContent>\n        <CardActions>\n          <Button size=\"small\" onClick={prop.takeAssessment}>Take Assessment</Button>\n        </CardActions>\n      </Card>\n    );\n  }","import React, { useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport {Button, Avatar} from '@material-ui/core';\nimport {useHistory, Switch, Route, useRouteMatch} from 'react-router-dom';\nimport CreateAssessment from '../createAssessments/createAssessment';\nimport Students from '../students/students';\nimport ViewAssessments from '../viewAssessments/viewAssessments';\nimport StudentsTemp from '../students/student-temp';\nimport ViewAssessment from '../assessment/viewAssessment';\nimport AssessmentUserScreen from '../assessmentUser/assessmentUser';\nimport AssessmentList from '../students/assessmentList';\nimport { UserDetailsContext } from '../../App';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display:'flex'\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      minHeight : '85vh',\n      height:'100%',\n      margin:'10px'\n\n    },\n    avatar:{\n        alignSelf : 'center',\n        margin:\"10px\"\n    },\n\n    button:{\n        margin:\"20px\"\n    }\n  }));\n\nexport default function TeacherDashboard(){\n\n    const classes = useStyles();\n    const history = useHistory();\n    const {path,url} = useRouteMatch();\n    const [value,setValue] = useContext(UserDetailsContext);\n\n    const onBtnClick = (action) =>{\n    \n\n        switch (action) {\n            case 'studentList':\n                    history.push('/home/students');\n                    break;\n                case 'createAssessment':\n                    history.push('/home/assessment');\n                    break;\n                case 'viewAssessments':\n                    history.push('/home/view');\n                    break;\n        \n            default:\n                break;\n        }\n    }\n\n    return (\n      <div  className={classes.root}>\n        <Grid container spacing={3}>\n          <Grid item xs={4}>\n            <Paper className={classes.paper} elevation={5}>\n                <Avatar src=\"/broken-image.jpg\" className={classes.avatar}/>\n                <span>{value.name}</span>\n                <Button variant=\"outlined\" \n                        className={classes.button} \n                        onClick={()=>onBtnClick('studentList')}>Students List</Button>\n                <Button variant=\"outlined\" \n                        className={classes.button}\n                        onClick={()=>onBtnClick('createAssessment')}>Create Assessments</Button>\n                <Button variant=\"outlined\" \n                        className={classes.button}\n                        onClick={()=>onBtnClick('viewAssessments')}>View All Assessments</Button>\n            </Paper>\n          </Grid>\n          <Grid item xs={8} >\n            <Paper className={classes.paper}>\n                <Switch>\n                    <Route exact path=\"/home\">\n                        <StudentsTemp />\n                    </Route>\n                    <Route exact path=\"/home/students\" >\n                        <StudentsTemp />\n                    </Route>\n                    <Route exact path=\"/home/assessment\" >\n                            <CreateAssessment />\n                    </Route>\n                    <Route exact path=\"/home/view\" >\n                            <ViewAssessments />\n                    </Route>\n                    <Route exact path=\"/home/viewAssessment\" >\n                            <ViewAssessment />\n                    </Route>\n                    <Route exact path=\"/home/userAssessment\">\n                            <AssessmentUserScreen />\n                    </Route>\n                    \n                </Switch>\n            </Paper>\n          </Grid>\n        </Grid>\n      </div>\n    );\n}","import React, {useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper,\n  },\n  gridList: {\n    width: '100%',\n    height: '100%',\n  },\n  icon: {\n    color: 'rgba(255, 255, 255, 0.54)',\n  },\n}));\n\n\n\n/**\n * The example data is structured as follows:\n *\n * import image from 'path/to/image.jpg';\n * [etc...]\n *\n * const tileData = [\n *   {\n *     img: image,\n *     title: 'Image',\n *     author: 'author',\n *   },\n *   {\n *     [etc...]\n *   },\n * ];\n */\nexport default function TitlebarGridList() {\n  const classes = useStyles();\n\n  const [tileData,setTileData] = useState([\n    {\n     \n      title: 'q3rq',\n      author: 'veeru'\n    },\n    {\n     title: 'q3rq',\n     author: 'veeru'\n    },\n    {\n     title: 'q3rq',\n     author: 'veeru'\n    },\n    {\n     title: 'q3rq',\n     author: 'veeru'\n    },\n    {\n     title: 'q3rq',\n     author: 'veeru'\n    },\n    {\n     title: 'q3rq',\n     author: 'veeru'\n    }\n  ]);\n\n  return (\n    <div className={classes.root}>\n      <GridList cellHeight={180} className={classes.gridList}>\n        <GridListTile key=\"Subheader\" cols={2} style={{ height: 'auto' }}>\n          <ListSubheader component=\"div\">December</ListSubheader>\n        </GridListTile>\n        {tileData.map((tile) => (\n          <GridListTile   >\n            <div  />\n            <GridListTileBar\n              title={tile.title}\n              subtitle={<span>by: {tile.author}</span>}\n              actionIcon={\n                <IconButton aria-label={`info about ${tile.title}`} className={classes.icon}>\n                  <InfoIcon />\n                </IconButton>\n              }\n            />\n          </GridListTile>\n        ))}\n      </GridList>\n    </div>\n  );\n}\n","import React, {useState, useEffect}from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgressWithLabel from '../../components/CircularProgressWithLabel';\nimport TitlebarGridList from '../../components/TitleBarGridList';\nimport AssessmentList from './assessmentList';\n\nconst useStyles = makeStyles((theme)=>({\n\n}));\n\nexport default function StudentDashboard(){\n\n    const classes = useStyles();\n\n    const [value,setValue] = useState(30);\n\n    const [teachers,setTeachers] = useState([]);\n\n    async function fetchUsers(){\n        \n        const st = await fetch('http://localhost:3000/users?filter[include][][relation]=assessments');\n\n        const d = await st.json();\n\n        return d;\n    } \n\n    function isolateTeachers(data){\n\n        const teachers = data.filter((user)=>{\n            return (user.category == 'Teacher');\n        });\n\n        setTeachers(teachers);\n    }\n\n    useEffect(() => {\n      \n        \n        fetchUsers()\n            .then(isolateTeachers);\n        \n    },[]);\n\n    return (\n        <div>\n           <AssessmentList teachers= {teachers} />\n        </div>\n    )\n}","import React, {useState, useContext} from 'react';\nimport { useLocation,useHistory } from \"react-router-dom\";\nimport {makeStyles} from '@material-ui/core/styles';\nimport {Radio, Paper, Button} from '@material-ui/core';\nimport { UserDetailsContext } from '../../App';\n\n\nconst useStyles = makeStyles((theme)=>({\n\n        question : {\n            textAlign : 'left',\n            fontSize : '20px'\n        },\n        option : {\n            display: 'flex',\n            justifyContent : 'left'\n        }\n}));\n\nexport default function Assessment() {\n    \n    const classes = useStyles();\n\n    const location = useLocation();\n    const history = useHistory();\n    debugger;\n    const [questions, setQuestions]= useState(location.state.qa);\n    const [answers,setAnswers] = useState(location.state.studentAnswers);\n    const [name,setName] = useState(location.state.name);\n    const [result,setResult] = useState(0);\n\n    const [userSelections,setUserSelected] = useState(questions.map((question)=>{\n                                                        return question.options.map((option)=>{\n                                                            return {isCorrect:false, value : option};\n                                                        });\n                                                      }));\n\n    const [isCreated,setCreated] = useState(false);\n\n    const [userContext,setUserContext] = useContext(UserDetailsContext);\n\n   \n    debugger;\n\n    function onCheckAnswer(questionIndex,answerIndex,option){\n        debugger;\n\n        var newuserSelections = [...userSelections];\n\n        newuserSelections[questionIndex] = newuserSelections[questionIndex].map(answers=>{\n            return {isCorrect : false, value : option};\n        });\n\n        newuserSelections[questionIndex][answerIndex] = {isCorrect:true, value:option};\n\n        setUserSelected(newuserSelections);\n    }\n\n    function computeResults(studentAnswers,correctAnswers){\n\n        let result = 0;\n\n        correctAnswers.map((answer,index)=>{\n            if(answer == studentAnswers[index]){\n                result = result + 1;\n            }\n        });\n\n        return result.toString();\n    }\n\n    async function onProceed(){\n    \n        debugger;\n\n\n        const assessment = {};\n\n        assessment.name = name;\n        assessment.qa = questions;\n        assessment.studentAnswers = [];\n        userSelections.map((questions)=>{\n            return questions.map((selection,index)=>{\n                if(selection.isCorrect){\n                    assessment.studentAnswers.push(selection.value);\n                }\n            })               \n                                    });\n\n                                    \n        assessment.status = \"Completed\";\n        assessment.result = computeResults(assessment.studentAnswers,answers);\n        \n        assessment.userId = userContext.id;\n        debugger;\n\n        // POST request using fetch with async/await\n        const requestOptions = {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(assessment)\n            };\n\n        const response = await fetch('http://localhost:3000/assessments', requestOptions);\n        const data = await response.json();\n\n        setResult(assessment.result);\n        setCreated(true);\n        \n\n    }\n\n    return (\n        <div>\n            {render()}\n        </div>\n    )\n\n    function render(){\n        \n            if(!isCreated){\n            return (\n                <div>\n                    <h2>{name}</h2>\n                    {\n                        questions.map((question,questionIndex) => (\n                            <div className={classes.question}>\n                                <Paper >{question.question}</Paper>\n                                        { question.options.map((option,answerIndex)=>(\n                                            <span className={classes.options}>\n                                                <Radio color='primary' \n                                                        value={option} \n                                                        checked={userSelections[questionIndex][answerIndex]?.isCorrect}\n                                                        onChange={()=>onCheckAnswer(questionIndex,answerIndex,option)}/>\n                                                <label>{option}</label>\n                                            </span>\n                                        ))}\n                              \n                                    \n                        \n                             </div>   \n                            \n                        ))\n                    }\n        \n                    <Button color=\"primary\" \n                            variant=\"contained\"\n                            onClick={onProceed}>Proceed</Button>\n                    \n                </div>\n            )\n        }else{\n            return (\n                <div> \n                    Assessment Completed \n                    <div>\n                        Your Score is {result}/{answers.length}\n                    </div>\n\n                </div>\n            )\n        }\n        \n    }\n    \n    \n}\n","import React, {createContext,useState} from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link \n} from \"react-router-dom\";\n\nimport Header from './screens/header/header';\nimport UserLogin from './screens/login/userLogin';\nimport CreateAssessment from './screens/createAssessments/createAssessment';\nimport Students from './screens/students/students';\nimport TeacherDashboard from './screens/teacherDashboard/teacherDashboard';\nimport SimpleTable from \"./components/SimpleTable\";\nimport StudentDashboard from \"./screens/students/studentDashboard\";\nimport Assessment from \"./screens/students/assessment\";\nimport ViewAssessment from \"./screens/assessment/viewAssessment\";\n\nexport const UserDetailsContext = createContext({},()=>{});\n\nexport default function App() {\n\n  const [value, setValue] = useState({\n    username : ''\n  });\n\n  return (\n    <UserDetailsContext.Provider value={[value,setValue]}>\n      <div>\n        <Header />\n\n        <Router>\n          <Switch>\n                <Route  path=\"/login\">\n                  <UserLogin />\n                </Route>\n                <Route  path=\"/home\">\n                  <TeacherDashboard />\n                </Route>\n                <Route path=\"/student\">\n                  <StudentDashboard />\n                </Route>\n                <Route path=\"/assessment\">\n                  <Assessment />\n                </Route>\n          </Switch>\n        </Router>\n      </div>\n    </UserDetailsContext.Provider>\n  );\n}\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}