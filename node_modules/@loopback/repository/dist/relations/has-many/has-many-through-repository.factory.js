"use strict";
// Copyright IBM Corp. 2020. All Rights Reserved.
// Node module: @loopback/repository
// This file is licensed under the MIT License.
// License text available at https://opensource.org/licenses/MIT
Object.defineProperty(exports, "__esModule", { value: true });
exports.createHasManyThroughRepositoryFactory = void 0;
const has_many_through_helpers_1 = require("./has-many-through.helpers");
const has_many_through_repository_1 = require("./has-many-through.repository");
function createHasManyThroughRepositoryFactory(relationMetadata, targetRepositoryGetter, throughRepositoryGetter) {
    const meta = has_many_through_helpers_1.resolveHasManyThroughMetadata(relationMetadata);
    const result = function (fkValue) {
        function getTargetContraint(throughInstances) {
            return has_many_through_helpers_1.createTargetConstraint(meta, throughInstances);
        }
        function getThroughConstraint() {
            const constriant = has_many_through_helpers_1.createThroughConstraint(meta, fkValue);
            return constriant;
        }
        function getThroughFkConstraint(targetInstance) {
            const constriant = has_many_through_helpers_1.createThroughFkConstraint(meta, targetInstance);
            return constriant;
        }
        return new has_many_through_repository_1.DefaultHasManyThroughRepository(targetRepositoryGetter, throughRepositoryGetter, getTargetContraint, getThroughConstraint, getThroughFkConstraint);
    };
    return result;
}
exports.createHasManyThroughRepositoryFactory = createHasManyThroughRepositoryFactory;
//# sourceMappingURL=has-many-through-repository.factory.js.map